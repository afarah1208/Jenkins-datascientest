apiVersion: apps/v1
kind: Deployment
metadata:
  name: movie-service
  labels:
    app: movie-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: movie-service
  template:
    metadata:
      labels:
        app: movie-service
    spec:
      containers:
      - name: movie-service
        image: afarah1208/movie-service:latest # Image mise à jour
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URI
          value: postgresql://movie_db_username:movie_db_password@movie-db/movie_db_dev
        - name: CAST_SERVICE_HOST_URL
          value: http://cast-service:8000/api/v1/casts/
        command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"] # Suppression de --reload

---apiVersion: apps/v1
kind: Deployment
metadata:
  name: cast-service
  labels:
    app: cast-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cast-service
  template:
    metadata:
      labels:
        app: cast-service
    spec:
      containers:
      - name: cast-service
        image: afarah1208/movie-service:latest # Vérifie si l'image est correcte pour Cast
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URI
          value: postgresql://cast_db_username:cast_db_password@cast-db/cast_db_dev
        command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"] # Suppression de --reload

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: {{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}
        ports:
        - containerPort: 8081
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config

